name: Deploy MCP Server to Cloud Run

on:
  push:
    branches:
      - main
    paths:
      - 'mcp-server/**'
      - 'backend/prompt_template_desc.py'
      - 'backend/prompt_templates_short.py'
      - 'Dockerfile.mcp'
      - 'requirements.txt'

jobs:
  continuous_integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Tests
        run: |
          echo "Running MCP server tests..."
          # Add unit tests if needed (pytest, etc.)

  continuous_deployment:
    name: Continuous Deployment
    runs-on: ubuntu-latest
    needs: continuous_integration
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: promptbud

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-east1-docker.pkg.dev

      - name: Build and Push Docker Image to Artifact Registry
        run: |
          IMAGE="${{ secrets.ARTIFACT_REGISTRY_URL_MCP }}"
          docker build -f Dockerfile.mcp -t $IMAGE .
          docker push $IMAGE

      - name: Deploy to Cloud Run
        run: |
          IMAGE="${{ secrets.ARTIFACT_REGISTRY_URL_MCP }}"
          gcloud run deploy prompt-budd-mcp \
            --image=$IMAGE \
            --platform=managed \
            --region=us-east1 \
            --project=promptbud \
            --allow-unauthenticated \
            --memory=512Mi \
            --port=8080 \
            --set-env-vars=OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }},GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
